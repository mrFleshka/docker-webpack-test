map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Прокси для основного домена
server {
    server_name webpack.test;
    listen 80;
    access_log /var/log/nginx/access.log;
    location / {
        proxy_pass http://node:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # include details about the original request
        proxy_set_header X-Original-Host $http_host;
        proxy_set_header X-Original-Scheme $scheme;
    }
}

# Прокси для сокета
server {
    server_name webpack.test;
    listen 8081;
    location / {
        proxy_pass http://node:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}

# Бэкенд сервер
server {
    # must match host header & port from above
    server_name webpack.test; 
    listen 9000;
    # can be used to prevent double logging requests
    access_log off; 
    error_log  /var/log/nginx/error.log;
    index index.php index.html index.htm;
    set $PROJECT_ROOT /var/www/app;
    root $PROJECT_ROOT;
}